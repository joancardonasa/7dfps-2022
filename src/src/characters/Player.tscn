[gd_scene load_steps=25 format=2]

[ext_resource path="res://src/characters/Player.gd" type="Script" id=1]
[ext_resource path="res://src/spells/SpellController.gd" type="Script" id=2]
[ext_resource path="res://src/spells/Spell.tscn" type="PackedScene" id=3]
[ext_resource path="res://src/other/Stats.tscn" type="PackedScene" id=4]
[ext_resource path="res://src/core/SceneTransition.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/gameplay/weapons/Gun.tscn" type="PackedScene" id=6]
[ext_resource path="res://src/gameplay/weapons/Minigun.tscn" type="PackedScene" id=7]
[ext_resource path="res://src/characters/WeaponManager.gd" type="Script" id=8]
[ext_resource path="res://src/gameplay/weapons/AssaultRifle.tscn" type="PackedScene" id=9]
[ext_resource path="res://src/characters/AmmoManager.gd" type="Script" id=10]
[ext_resource path="res://sound/weapons/Pistol Shot 7.wav" type="AudioStream" id=11]
[ext_resource path="res://sound/weapons/Gun Pickup 6.wav" type="AudioStream" id=12]
[ext_resource path="res://src/UI/HUD.tscn" type="PackedScene" id=13]
[ext_resource path="res://src/gameplay/Pickups/PickupManager.gd" type="Script" id=14]
[ext_resource path="res://sound/weapons/Reload 3.wav" type="AudioStream" id=15]
[ext_resource path="res://sound/weapons/Reload 5.wav" type="AudioStream" id=16]
[ext_resource path="res://src/characters/Camera.gd" type="Script" id=17]
[ext_resource path="res://src/characters/PlayerHurtbox.gd" type="Script" id=18]
[ext_resource path="res://sound/weapons/Machine Gun Shot 2.wav" type="AudioStream" id=19]
[ext_resource path="res://sound/weapons/AR Single Shot (Suppressed) 3.wav" type="AudioStream" id=20]

[sub_resource type="CapsuleShape" id=1]
radius = 0.411191
height = 0.31459

[sub_resource type="CylinderShape" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/color = Color( 0.0470588, 0.0156863, 0.129412, 1 )
shader_param/width = 10.0
shader_param/pattern = 1
shader_param/inside = false
shader_param/add_margins = false

[node name="Player" type="KinematicBody" groups=["Player"]]
collision_layer = 2
script = ExtResource( 1 )

[node name="HUD" parent="." instance=ExtResource( 13 )]

[node name="Stats" parent="." instance=ExtResource( 4 )]
max_HP = 3

[node name="PlayerCollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0 )
shape = SubResource( 1 )

[node name="Head" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.05185, 0 )

[node name="LeanGimbal" type="Spatial" parent="Head"]

[node name="Camera" type="Camera" parent="Head/LeanGimbal" groups=["Camera"]]
cull_mask = 1048573
current = true
fov = 100.0
far = 400.0
script = ExtResource( 17 )

[node name="Hand" type="Position3D" parent="Head"]
transform = Transform( 1, 0, 0, 0, 0.999997, -0.00246091, 0, 0.00246091, 0.999997, 0, -0.728066, -1.40332 )

[node name="WeaponManager" type="Spatial" parent="Head" groups=["WeaponManager"]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -1 )
script = ExtResource( 8 )

[node name="WeaponSocket" type="Spatial" parent="Head/WeaponManager"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.573, -0.57, 0.216 )

[node name="Gun" parent="Head/WeaponManager/WeaponSocket" instance=ExtResource( 6 )]
is_active = true

[node name="ShootSFX" type="AudioStreamPlayer" parent="Head/WeaponManager/WeaponSocket/Gun"]
stream = ExtResource( 11 )
volume_db = -5.0

[node name="ReloadSFX" type="AudioStreamPlayer" parent="Head/WeaponManager/WeaponSocket/Gun"]
stream = ExtResource( 15 )

[node name="AssaultRifle" parent="Head/WeaponManager/WeaponSocket" instance=ExtResource( 9 )]

[node name="ShootSFX" type="AudioStreamPlayer" parent="Head/WeaponManager/WeaponSocket/AssaultRifle"]
stream = ExtResource( 20 )
volume_db = -10.0

[node name="ReloadSFX" type="AudioStreamPlayer" parent="Head/WeaponManager/WeaponSocket/AssaultRifle"]
stream = ExtResource( 16 )

[node name="Minigun" parent="Head/WeaponManager/WeaponSocket" instance=ExtResource( 7 )]
ammo_type = 1
damage = 1

[node name="ShootSFX" type="AudioStreamPlayer" parent="Head/WeaponManager/WeaponSocket/Minigun"]
stream = ExtResource( 19 )
volume_db = -10.0

[node name="ReloadSFX" type="AudioStreamPlayer" parent="Head/WeaponManager/WeaponSocket/Minigun"]
stream = ExtResource( 16 )

[node name="WeaponHitscanRaycast" type="RayCast" parent="Head/WeaponManager" groups=["WeaponHitscanRaycast"]]
cast_to = Vector3( 0, 0, -200 )
collision_mask = 512
collide_with_areas = true
collide_with_bodies = false
debug_shape_custom_color = Color( 0.0745098, 0.870588, 0.627451, 1 )

[node name="ChangeSFX" type="AudioStreamPlayer" parent="Head/WeaponManager"]
stream = ExtResource( 12 )

[node name="SpellController" type="Node" parent="."]
script = ExtResource( 2 )
startingSpell = ExtResource( 3 )

[node name="SceneTransition" parent="." instance=ExtResource( 5 )]

[node name="PickUpManager" type="Spatial" parent="." groups=["PickupManager"]]
script = ExtResource( 14 )

[node name="PickupArea" type="Area" parent="PickUpManager"]
collision_layer = 0
collision_mask = 64

[node name="CollisionShape" type="CollisionShape" parent="PickUpManager/PickupArea"]
shape = SubResource( 2 )

[node name="AmmoManager" type="Spatial" parent="." groups=["AmmoManager"]]
script = ExtResource( 10 )

[node name="HurtBox" type="Area" parent="."]
collision_layer = 256
collision_mask = 512
script = ExtResource( 18 )

[node name="CollisionShape" type="CollisionShape" parent="HurtBox"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0 )
shape = SubResource( 1 )

[node name="InvulTimer" type="Timer" parent="HurtBox"]
wait_time = 0.8
one_shot = true

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1920, 1080 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="ViewportContainer/Viewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0 )
cull_mask = 2
fov = 100.0
far = 200.0

[connection signal="died_signal" from="Stats" to="." method="_on_Stats_died_signal"]
[connection signal="hp_updated" from="Stats" to="HUD" method="_on_Stats_hp_updated"]
[connection signal="area_entered" from="PickUpManager/PickupArea" to="PickUpManager" method="_on_PickupArea_area_entered"]
[connection signal="update_ammo" from="AmmoManager" to="Head/WeaponManager" method="_on_AmmoManager_update_ammo"]
[connection signal="damage_taken" from="HurtBox" to="." method="_on_HurtBox_damage_taken"]
